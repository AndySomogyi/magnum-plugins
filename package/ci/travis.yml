# kate: indent-width 2;

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - kubuntu-backports
    packages:
    - g++-4.7
    - cmake
    - libfreetype6-dev
    - libjpeg-dev
    - libopenal-dev
    - libpng12-dev
    - libqt4-dev
    - libdevil-dev
    - libassimp-dev

matrix:
  include:
  - language: cpp
    os: linux
    compiler: gcc
    env:
    - TARGET=desktop
  - language: cpp
    os: linux
    compiler: gcc
    env:
    - TARGET=desktop
    - BUILD_DEPRECATED=OFF
  - language: cpp
    os: linux
    compiler: clang
    env:
    - TARGET=desktop-sanitizers
    - CMAKE_CXX_FLAGS=-fsanitize=address
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-precise-3.8
        - kubuntu-backports
        packages:
        - clang-3.8
        - cmake
        - libfreetype6-dev
        - libjpeg-dev
        - libopenal-dev
        - libpng12-dev
        - libqt4-dev
        - libdevil-dev
  - language: cpp
    os: linux
    compiler: gcc
    env:
    - TARGET=desktop-gles
    - TARGET_GLES2=ON
  #- language: cpp
    #os: linux
    #compiler: gcc
    #env:
    #- TARGET=desktop-gles
    #- TARGET_GLES2=OFF
  - language: cpp
    os: osx
    compiler: clang
    env: TARGET=desktop
  - language: cpp
    os: osx
    osx_image: xcode7.3
    env:
    - TARGET=ios-simulator
    - TARGET_GLES2=ON
  - language: cpp
    os: osx
    osx_image: xcode7.3
    env:
    - TARGET=ios-simulator
    - TARGET_GLES2=OFF
  - language: cpp
    os: osx
    osx_image: xcode7.3
    env:
    - TARGET=emscripten
    - TARGET_GLES2=ON
  - language: cpp
    os: osx
    osx_image: xcode7.3
    env:
    - TARGET=emscripten
    - TARGET_GLES2=OFF
  - language: android
    os: linux
    env:
    - TARGET=android
    - TARGET_GLES2=ON
    android:
      components:
      - build-tools-19.0.0
      - android-19
      - sys-img-armeabi-v7a-android-19
  - language: android
    os: linux
    env:
    - TARGET=android
    - TARGET_GLES2=OFF
    android:
      components:
      - build-tools-19.0.0
      - android-19
      - sys-img-armeabi-v7a-android-19

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/00ec7a9066bb0fec98f3
    on_success: change
    on_failure: always
    on_start: never

cache:
  directories:
  - $HOME/harfbuzz

install:
- if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TARGET" == "desktop" ]; then pip install --user urllib3[secure] && pip install --user cpp-coveralls && export CMAKE_CXX_FLAGS="$CMAKE_CXX_FLAGS --coverage"; fi

- if [ "$TRAVIS_OS_NAME" == "linux" ] && [ ! "$TARGET" == "desktop-sanitizers" ]; then export CXX=g++-4.7; fi
- if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TARGET" == "desktop-sanitizers" ]; then export CXX=clang++-3.8; fi
- if [ "$BUILD_DEPRECATED" != "OFF" ]; then export BUILD_DEPRECATED=ON; fi
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then export PLATFORM_GL_API=GLX; fi
- if [ "$TRAVIS_OS_NAME" == "linux" ]; then export WITH_COLLADAIMPORTER=ON; fi
- if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TARGET" == "android" ]; then wget -nc http://dl.google.com/android/ndk/android-ndk-r10e-linux-x86_64.bin && chmod +x android-*.bin && ./android-*.bin -y | grep -v Extracting; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$TARGET" == "desktop" ]; then export PLATFORM_GL_API=CGL; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$TARGET" == "desktop" ]; then export WITH_COLLADAIMPORTER=OFF; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$TARGET" == "desktop" ]; then brew install devil; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$TARGET" == "ios-simulator" ]; then gem install xcpretty; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$TARGET" == "emscripten" ]; then brew install emscripten && export LLVM=/usr/local/opt/emscripten/libexec/llvm/bin && emcc; fi

# HarfBuzz (cached)
- if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$TARGET" == "desktop" ]; then brew install harfbuzz; fi
- if [ "$TRAVIS_OS_NAME" == "linux" ] && ( [ "$TARGET" == "desktop" ] || [ "$TARGET" == "desktop-sanitizers" ] || [ "$TARGET" == "desktop-gles" ] ) && [ ! -e "$HOME/harfbuzz/include" ]; then wget http://www.freedesktop.org/software/harfbuzz/release/harfbuzz-1.0.3.tar.bz2 && tar xf harfbuzz-1.0.3.tar.bz2 && cd harfbuzz-1.0.3 && ./configure --prefix=$HOME/harfbuzz && make -j install && cd ..; fi

script:
- if [ "$TRAVIS_OS_NAME" == "linux" ] && ( [ "$TARGET" == "desktop" ] || [ "$TARGET" == "desktop-sanitizers" ] ); then ./package/ci/travis-desktop.sh; fi
- if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TARGET" == "desktop-gles" ]; then ./package/ci/travis-desktop-gles.sh; fi
- if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TARGET" == "android" ]; then ./package/ci/travis-android-arm.sh; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$TARGET" == "desktop" ]; then ./package/ci/travis-desktop.sh; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$TARGET" == "ios-simulator" ]; then ./package/ci/travis-ios-simulator.sh; fi
- if [ "$TRAVIS_OS_NAME" == "osx" ] && [ "$TARGET" == "emscripten" ]; then ./package/ci/travis-emscripten.sh; fi
# Travis somehow is not able to gather all output, try to force it using this
- sync

after_success:
- if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TARGET" == "desktop" ]; then coveralls --gcov /usr/bin/gcov-4.7 -i src/ -E ".*/(Test|external)/.*" --gcov-options '\-lp' > /dev/null; fi
